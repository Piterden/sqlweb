{"version":3,"file":"sqljs.js","sourceRoot":"","sources":["../code/license.ts","../code/error.ts","../code/query.ts","../code/column.ts","../code/create.ts","../code/insert.ts","../code/select.ts","../code/instance.ts","../code/model/Map.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Project: SqlJs - https://github.com/ujjwalguptaofficial/sqljs\r\n * Author: Ujjwal Gupta \r\n * License: MIT\r\n */","namespace SqlJs {\r\n    export enum Errors {\r\n        JsStoreUndefined = \"Jstore_undefined\",\r\n        UndefinedCon = \"undefined_connection\",\r\n        Undefined = \"undefined\"\r\n    }\r\n\r\n    export interface IError {\r\n        _type: Errors;\r\n        _message: string;\r\n    }\r\n\r\n    export class Error implements IError {\r\n        _type: Errors;\r\n        _message: string;\r\n        _info: any;\r\n        constructor(type: Errors, info: any = null) {\r\n            this._type = type;\r\n            this._info = info;\r\n        }\r\n\r\n        public throw = function () {\r\n            throw this.get();\r\n        };\r\n\r\n        print = function (isWarn: boolean = false) {\r\n            var error_obj = this.get();\r\n            if (isWarn) {\r\n                console.warn(error_obj);\r\n            }\r\n            else {\r\n                console.error(error_obj);\r\n            }\r\n        };\r\n\r\n        private get = function () {\r\n            var error_obj = {\r\n                _type: this._type,\r\n                _message: this._message\r\n            } as IError;\r\n\r\n            switch (this._type) {\r\n                case Errors.UndefinedCon:\r\n                    error_obj._message = \"jsstore connection is not defined\";\r\n                    break;\r\n                case Errors.JsStoreUndefined:\r\n                    error_obj._message = \"jsstore is not defined\";\r\n                    break;\r\n                default:\r\n                    error_obj._message = 'the error type is not defined';\r\n                    break;\r\n            }\r\n            return error_obj;\r\n        };\r\n    }\r\n}","namespace SqlJs {\r\n    export class Query {\r\n        _stringQry: string;\r\n        _maps: IMap[] = [];\r\n        _api: string;\r\n        _splittedQry: string[];\r\n        constructor(qry: string) {\r\n            this._stringQry = qry.toLowerCase();\r\n            this._splittedQry = this.getWords();\r\n            this._api = this._splittedQry[0];\r\n        }\r\n\r\n        getMapValue = function (key, isMapValue = true) {\r\n            if (isMapValue === true && key.indexOf(\"@\") >= 0) {\r\n                var is_value_exist = false;\r\n                for (var i = 0, length = this._maps.length; i < length; i++) {\r\n                    if (this._maps[i]._key === key) {\r\n                        is_value_exist = true;\r\n                        return this._maps[i]._value;\r\n                    }\r\n                }\r\n                if (is_value_exist === false) {\r\n                    console.error('key does not have any value');\r\n                }\r\n            }\r\n            else {\r\n                return key;\r\n            }\r\n        };\r\n\r\n        getWords = function () {\r\n            return this._stringQry.replace(\"(\", \" ( \").replace(/  +/g, ' ').replace(/[=]/g, \" \").split(\" \");\r\n            // .replace(\"=\", \" \").replace(\"(\",\" \")\r\n        };\r\n\r\n        map = function (key, value) {\r\n            this._maps.push(new Model.Map(key, value));\r\n        };\r\n    }\r\n}","namespace SqlJs {\r\n    export class Column {\r\n        _query: Query;\r\n        _index_for_loop: number = 0;\r\n        constructor(qry: Query) {\r\n            this._query = qry;\r\n        }\r\n\r\n        getKeyWordsValue = function () {\r\n            const keywords_value = [\r\n                { value: 'PrimaryKey', rules: 'true' },\r\n                { value: 'PrimaryKey', rules: 'true' },\r\n                { value: 'PrimaryKey', rules: 'true' },\r\n                { value: 'NotNull', rules: 'true' },\r\n                { value: 'NotNull', rules: 'true' },\r\n                { value: 'AutoIncrement', rules: 'true' },\r\n                { value: 'Unique', rules: 'true' },\r\n                { value: 'Default', rules: 'next' },\r\n                { value: 'string', rules: 'true' },\r\n                { value: 'boolean', rules: 'true' },\r\n                { value: 'object', rules: 'true' },\r\n                { value: 'number', rules: 'true' }\r\n            ];\r\n            return keywords_value;\r\n        };\r\n\r\n        getQuery = function () {\r\n            var query: object = {\r\n                Name: this._query._splittedQry[this._index_for_loop++]\r\n            };\r\n            const keywords = ['primary key', 'pk', 'primarykey', 'not null', 'notnull',\r\n                'autoincrement', 'unique', 'default', 'string', 'boolean', 'object', 'number'];\r\n            for (var i = this._index_for_loop, length = this._query._splittedQry.length; i < length;) {\r\n                var index_of_keywords = keywords.indexOf(this._query._splittedQry[i]);\r\n                if (index_of_keywords >= 0) {\r\n                    const keywords_value = this.getKeyWordsValue();\r\n                    this._index_for_loop = i;\r\n                    query[keywords_value[index_of_keywords].value] =\r\n                        this.getValue(keywords_value[index_of_keywords].rules);\r\n                    i = this._index_for_loop;\r\n                }\r\n                i++;\r\n            }\r\n            const data_type = ['string', 'boolean', 'object', 'number'];\r\n            for (var prop in query) {\r\n                if (data_type.indexOf(prop) >= 0) {\r\n                    query['DataType'] = prop;\r\n                }\r\n            }\r\n            return query;\r\n        };\r\n\r\n        getValue = function (rule) {\r\n            switch (rule) {\r\n                case 'next':\r\n                    var value = this._query._splittedQry[++this._index_for_loop];\r\n                    return (this._query.getMapValue(value));\r\n                case 'true':\r\n                    return (this._query.getMapValue(true, false));\r\n                default:\r\n            }\r\n        };\r\n    }\r\n}","namespace SqlJs {\r\n    export class Create {\r\n        _query: Query;\r\n        _index_for_loop: number = 0;\r\n        constructor(qry: Query) {\r\n            this._query = qry;\r\n        }\r\n\r\n        getKeyWordsValue = function () {\r\n            const keywords_value = [\r\n                { value: 'Name', rules: 'next' },\r\n                { value: 'Name', rules: 'next' },\r\n                { value: 'Columns', rules: 'getColumns' }\r\n            ];\r\n            return keywords_value;\r\n        };\r\n\r\n        getIndexofColumnQuery = function () {\r\n            var index = 0;\r\n            for (var j = this._index_for_loop, length = this._query._stringQry.length;\r\n                (j > 0 && index < length); index++) {\r\n                if (this._query._stringQry[index] === \" \") {\r\n                    j--;\r\n                }\r\n            }\r\n            return index;\r\n        };\r\n\r\n        getColumns = function () {\r\n            var column_query = this._query._stringQry.substr(this.getIndexofColumnQuery()).\r\n                replace(/[()]/g, '').split(','),\r\n                columns = [];\r\n            column_query.forEach(function (item: string) {\r\n                if (item.length > 0) {\r\n                    const query = new Query(item);\r\n                    columns.push(new Column(query).getQuery());\r\n                }\r\n            });\r\n            return columns;\r\n        };\r\n\r\n        getQuery = function () {\r\n            var query: object = {};\r\n            const keywords = ['database', 'table', '('];\r\n\r\n            for (var i = this._index_for_loop, length = this._query._splittedQry.length; i < length;) {\r\n                var index_of_keywords = keywords.indexOf(this._query._splittedQry[i]);\r\n                if (index_of_keywords >= 0) {\r\n                    const keywords_value = this.getKeyWordsValue();\r\n                    this._index_for_loop = i;\r\n                    query[keywords_value[index_of_keywords].value] =\r\n                        this.getValue(keywords_value[index_of_keywords].rules);\r\n                    i = this._index_for_loop;\r\n                }\r\n                i++;\r\n            }\r\n            return query;\r\n        };\r\n\r\n        getValue = function (rule) {\r\n            switch (rule) {\r\n                case 'next':\r\n                    var value = this._query._splittedQry[++this._index_for_loop];\r\n                    return (this._query.getMapValue(value));\r\n                case 'getColumns':\r\n                    var value = this.getColumns();\r\n                    this._index_for_loop = this._query._splittedQry.length;\r\n                    return value;\r\n                default:\r\n            }\r\n        };\r\n    }\r\n}","namespace SqlJs {\r\n    export class Insert {\r\n        _query: Query;\r\n        _index_for_loop: number = 0;\r\n        constructor(qry: Query) {\r\n            this._query = qry;\r\n        }\r\n\r\n        getKeyWordsValue = function () {\r\n            const keywords_value = [\r\n                { value: 'Into', rules: 'next' },\r\n                { value: 'Values', rules: 'next' },\r\n                { value: 'SkipDataCheck', rules: 'true' },\r\n                { value: 'Return', rules: 'true' }\r\n            ];\r\n            return keywords_value;\r\n        };\r\n\r\n        getQuery = function () {\r\n            var query: object = {};\r\n            const keywords = ['into', 'values', 'skipdatacheck', 'return'];\r\n\r\n            for (var i = this._index_for_loop, length = this._query._splittedQry.length; i < length;) {\r\n                var index_of_keywords = keywords.indexOf(this._query._splittedQry[i]);\r\n                if (index_of_keywords >= 0) {\r\n                    const keywords_value = this.getKeyWordsValue();\r\n                    this._index_for_loop = i;\r\n                    query[keywords_value[index_of_keywords].value] =\r\n                        this.getValue(keywords_value[index_of_keywords].rules);\r\n                    i = this._index_for_loop;\r\n                }\r\n                i++;\r\n            }\r\n            return query;\r\n        };\r\n\r\n        getValue = function (rule) {\r\n            switch (rule) {\r\n                case 'next':\r\n                    var value = this._query._splittedQry[++this._index_for_loop];\r\n                    return (this._query.getMapValue(value));\r\n                case 'true':\r\n                    return (this._query.getMapValue(true, false));\r\n                default:\r\n            }\r\n        };\r\n    }\r\n}","namespace SqlJs {\r\n    export class Select {\r\n        constructor(msg: string) {\r\n            // ss\r\n        }\r\n    }\r\n}","namespace SqlJs {\r\n    export class Instance {\r\n        _connection: JsStore.Instance;\r\n        _query: Query;\r\n        constructor(dbSchemaQry: string) {\r\n            if (typeof JsStore === \"undefined\") {\r\n                new Error(Errors.JsStoreUndefined).throw();\r\n            }\r\n            else {\r\n                if (dbSchemaQry) {\r\n                    this._connection = new JsStore.Instance();\r\n                    const dbSchema = this.getDbSchema(dbSchemaQry);\r\n                }\r\n                else {\r\n                    new Error(Errors.UndefinedCon).throw();\r\n                }\r\n            }\r\n        }\r\n\r\n        run = function (qry: Query, onSuccess: () => any, onError: () => IError) {\r\n            this._query = qry;\r\n            qry = undefined;\r\n            var jsstore_query;\r\n            switch (this._query._api) {\r\n                case 'insert':\r\n                    jsstore_query = new Insert(this._query).getQuery();\r\n                    break;\r\n\r\n            }\r\n            console.log(jsstore_query);\r\n            // this._connection[this._api](jsstore_query, onSuccess, onError);\r\n        };\r\n\r\n        private getDbSchema = function (dbSchemaInSql: string) {\r\n            const queries = dbSchemaInSql.split(\";\");\r\n            var database, tables = [];\r\n            queries.forEach(function (item) {\r\n                if (item.length > 0) {\r\n                    var query = new Query(item);\r\n                    if (query._stringQry.indexOf('table') >= 0) {\r\n                        tables.push(new Create(query).getQuery());\r\n                    }\r\n                    else {\r\n                        database = new Create(query).getQuery();\r\n                    }\r\n                }\r\n            });\r\n            database.Tables = tables;\r\n            return database;\r\n        };\r\n    }\r\n}","namespace SqlJs {\r\n    export interface IMap {\r\n        _key: string;\r\n        _value: any;\r\n    }\r\n\r\n    export namespace Model {\r\n        export class Map implements IMap {\r\n            _key: string;\r\n            _value: any;\r\n            constructor(key, value) {\r\n                this._key = key;\r\n                this._value = value;\r\n            }\r\n        }\r\n    }\r\n}"]}