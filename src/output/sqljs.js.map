{"version":3,"file":"sqljs.js","sourceRoot":"","sources":["../code/license.ts","../code/error.ts","../code/query.ts","../code/insert.ts","../code/select.ts","../code/instance.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Project: SqlJs - https://github.com/ujjwalguptaofficial/sqljs\r\n * Author: Ujjwal Gupta \r\n * License: MIT\r\n */","module SqlJs {\r\n    export enum Errors {\r\n        JsStoreUndefined = \"Jstore_undefined\",\r\n        UndefinedCon = \"undefined_connection\",\r\n        Undefined = \"undefined\"\r\n    }\r\n\r\n    export interface IError {\r\n        _type: Errors,\r\n        _message: string\r\n    }\r\n\r\n    export class Error implements IError {\r\n        _type: Errors;\r\n        _message: string;\r\n        _info: any;\r\n        constructor(type: Errors, info: any = null) {\r\n            this._type = type;\r\n            this._info = info;\r\n        }\r\n\r\n        private get = function () {\r\n            var error_obj = <IError>{\r\n                _type: this._type,\r\n                _message: this._message\r\n            }\r\n\r\n            switch (this._type) {\r\n                case Errors.UndefinedCon:\r\n                    error_obj._message = \"jsstore connection is not defined\";\r\n                    break;\r\n                case Errors.JsStoreUndefined:\r\n                    error_obj._message = \"jsstore is not defined\";\r\n                    break;\r\n                default:\r\n                    error_obj._message = 'the error type is not defined';\r\n                    break;\r\n            }\r\n            return error_obj;\r\n        }\r\n\r\n        throw = function () {\r\n            throw this.get();\r\n        }\r\n\r\n        print = function (isWarn: boolean = false) {\r\n            var error_obj = this.get();\r\n            if (isWarn) {\r\n                console.warn(error_obj);\r\n            }\r\n            else {\r\n                console.error(error_obj);\r\n            }\r\n        }\r\n    }\r\n}","module SqlJs {\r\n    export interface IMap {\r\n        _key: string,\r\n        _value: any\r\n    }\r\n    export class Query {\r\n        _qry: string;\r\n        _maps: Array<IMap> = [];\r\n        _api: string;\r\n        _splittedQry: Array<string>;\r\n        constructor(qry: string) {\r\n            this._qry = qry.toLowerCase();\r\n            this._splittedQry = this._qry.split(\" \");\r\n            this._api = this._splittedQry[0];\r\n        }\r\n\r\n        map = function (key, value) {\r\n            this._maps.push(<IMap>{\r\n                _key: key,\r\n                _value: value\r\n            });\r\n        }\r\n    }\r\n}","module SqlJs {\r\n    export class Insert {\r\n        constructor(qry: string) {\r\n            \r\n        }\r\n    }\r\n}","module SqlJs {\r\n    export class Select {\r\n        constructor(msg: string) {\r\n\r\n        }\r\n    }\r\n}","\r\nmodule SqlJs {\r\n    export class Instance {\r\n        _connection: JsStore.Instance;\r\n        _query: Query;\r\n        constructor(jsstoreCon: JsStore.Instance) {\r\n            if (typeof JsStore == undefined) {\r\n\r\n            }\r\n            else {\r\n                if (jsstoreCon) {\r\n                    this._connection = jsstoreCon;\r\n                }\r\n                else {\r\n                    new Error(Errors.UndefinedCon).throw();\r\n                }\r\n            }\r\n        }\r\n\r\n        run = function (qry: Query) {\r\n            this._query = qry;\r\n            qry = undefined;\r\n            switch (this._query) {\r\n                case 'insert':\r\n                    // new Insert()\r\n            }\r\n        }\r\n    }\r\n}"]}